diff --git a/IlmBase/CMakeLists.txt b/IlmBase/CMakeLists.txt
index aa9b932..f7b7c18 100644
--- a/IlmBase/CMakeLists.txt
+++ b/IlmBase/CMakeLists.txt
@@ -35,7 +35,7 @@ OPTION (NAMESPACE_VERSIONING "Namespace Versioning" ON)
 SET (CMAKE_MACOSX_RPATH 1)
 SET (BUILD_WITH_INSTALL_RPATH 1)
 
-IF ( NOT WIN32)
+IF ( NOT WIN32 OR MINGW)
   ADD_DEFINITIONS ( -pthread )
 ENDIF ()
 
@@ -110,7 +110,7 @@ ADD_SUBDIRECTORY ( IexMath )
 ADD_SUBDIRECTORY ( Imath )
 ADD_SUBDIRECTORY ( IlmThread )
 
-IF (WIN32)
+IF (WIN32 AND NOT MINGW)
   FILE ( COPY ${CMAKE_CURRENT_SOURCE_DIR}/config.windows/IlmBaseConfig.h
     DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/config
     )
@@ -220,7 +220,7 @@ OpenEXR_includedir=\${prefix}/include/OpenEXR
 Name: IlmBase
 Description: Base math and exception libraries
 Version: ${ILMBASE_VERSION}
-Libs: -L\${libdir} -lImath${ILMBASE_LIBSUFFIX} -lIexMath${ILMBASE_LIBSUFFIX} -lHalf -lIex${ILMBASE_LIBSUFFIX} -lIlmThread${ILMBASE_LIBSUFFIX} -pthread
+Libs: -L\${libdir} -lImath -lIexMath -lHalf -lIex -lIlmThread -pthread
 Cflags: -pthread -I\${OpenEXR_includedir}
 ")
 
diff --git a/IlmBase/IlmThread/CMakeLists.txt b/IlmBase/IlmThread/CMakeLists.txt
index e94be04..c67d7b7 100644
--- a/IlmBase/IlmThread/CMakeLists.txt
+++ b/IlmBase/IlmThread/CMakeLists.txt
@@ -10,7 +10,7 @@ SET( ILMTHREAD_LIBRARY_SOURCES
   IlmThreadSemaphorePosixCompat.cpp
   IlmThreadSemaphorePosix.cpp
 )
-IF (WIN32)
+IF (WIN32 AND NOT MINGW)
   SET( ILMTHREAD_LIBRARY_SOURCES ${ILMTHREAD_LIBRARY_SOURCES}
     IlmThreadMutexWin32.cpp
     IlmThreadSemaphoreWin32.cpp
diff --git a/IlmBase/IlmThread/IlmThread.h b/IlmBase/IlmThread/IlmThread.h
index 1f6d9e6..5a95762 100644
--- a/IlmBase/IlmThread/IlmThread.h
+++ b/IlmBase/IlmThread/IlmThread.h
@@ -94,7 +94,7 @@
 #include "IlmThreadExport.h"
 #include "IlmThreadNamespace.h"
 
-#if defined _WIN32 || defined _WIN64
+#if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
     #ifdef NOMINMAX
         #undef NOMINMAX
     #endif
@@ -127,7 +127,7 @@ class ILMTHREAD_EXPORT Thread
     
   private:
 
-    #if defined _WIN32 || defined _WIN64
+    #if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
 	HANDLE _thread;
     #elif HAVE_PTHREAD
 	pthread_t _thread;
diff --git a/IlmBase/IlmThread/IlmThreadMutex.h b/IlmBase/IlmThread/IlmThreadMutex.h
index dd42067..9efe83e 100644
--- a/IlmBase/IlmThread/IlmThreadMutex.h
+++ b/IlmBase/IlmThread/IlmThreadMutex.h
@@ -70,7 +70,7 @@
 #include "IlmBaseConfig.h"
 #include "IlmThreadNamespace.h"
 
-#if defined _WIN32 || defined _WIN64
+#if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
     #ifdef NOMINMAX
         #undef NOMINMAX
     #endif
@@ -97,7 +97,7 @@ class ILMTHREAD_EXPORT Mutex
     void	lock () const;
     void	unlock () const;
 
-    #if defined _WIN32 || defined _WIN64
+    #if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
 	mutable CRITICAL_SECTION _mutex;
     #elif HAVE_PTHREAD
 	mutable pthread_mutex_t _mutex;
diff --git a/IlmBase/IlmThread/IlmThreadSemaphore.h b/IlmBase/IlmThread/IlmThreadSemaphore.h
index 46cfd02..b136582 100644
--- a/IlmBase/IlmThread/IlmThreadSemaphore.h
+++ b/IlmBase/IlmThread/IlmThreadSemaphore.h
@@ -46,7 +46,7 @@
 #include "IlmThreadExport.h"
 #include "IlmThreadNamespace.h"
 
-#if defined _WIN32 || defined _WIN64
+#if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
     #ifdef NOMINMAX
         #undef NOMINMAX
     #endif
@@ -75,7 +75,7 @@ class ILMTHREAD_EXPORT Semaphore
 
   private:
 
-    #if defined _WIN32 || defined _WIN64
+    #if (defined _WIN32 || defined _WIN64) && !defined HAVE_PTHREAD
 
 	mutable HANDLE _semaphore;
 
diff --git a/IlmBase/IlmThread/Makefile.am b/IlmBase/IlmThread/Makefile.am
index dde24e4..4bacb70 100644
--- a/IlmBase/IlmThread/Makefile.am
+++ b/IlmBase/IlmThread/Makefile.am
@@ -5,11 +5,21 @@ lib_LTLIBRARIES = libIlmThread.la
 libIlmThread_la_SOURCES = IlmThreadPool.h IlmThread.h \
 			  IlmThreadSemaphore.h IlmThreadMutex.h \
 			  IlmThreadPool.cpp IlmThread.cpp \
-			  IlmThreadSemaphore.cpp IlmThreadMutex.cpp \
-			  IlmThreadPosix.cpp IlmThreadSemaphorePosix.cpp \
-			  IlmThreadSemaphorePosixCompat.cpp \
-			  IlmThreadMutexPosix.cpp
-
+			  IlmThreadSemaphore.cpp IlmThreadMutex.cpp
+
+if HAVE_PTHREAD
+libIlmThread_la_SOURCES += IlmThreadPosix.cpp IlmThreadSemaphorePosix.cpp \
+			   IlmThreadSemaphorePosixCompat.cpp \
+			   IlmThreadMutexPosix.cpp
+EXTRA_DIST_Thread = IlmThreadMutexWin32.cpp IlmThreadSemaphoreWin32.cpp \
+		    IlmThreadWin32.cpp
+else
+libIlmThread_la_SOURCES += IlmThreadMutexWin32.cpp IlmThreadSemaphoreWin32.cpp \
+			   IlmThreadWin32.cpp
+EXTRA_DIST_Thread = IlmThreadPosix.cpp IlmThreadSemaphorePosix.cpp \
+		    IlmThreadSemaphorePosixCompat.cpp \
+		    IlmThreadMutexPosix.cpp
+endif
 libIlmThread_la_LDFLAGS = -version-info @LIBTOOL_VERSION@ -no-undefined
 if LIB_SUFFIX_EXISTS
 libIlmThread_la_LDFLAGS += -release @LIB_SUFFIX@
@@ -25,7 +35,6 @@ libIlmThreadinclude_HEADERS = IlmThreadPool.h IlmThread.h \
 
 noinst_HEADERS = 
 
-EXTRA_DIST = $(noinst_HEADERS) IlmThreadMutexWin32.cpp IlmThreadSemaphoreWin32.cpp \
-	     IlmThreadWin32.cpp CMakeLists.txt
+EXTRA_DIST = $(noinst_HEADERS) $(EXTRA_DIST_Thread) CMakeLists.txt
 
 INCLUDES = -I$(top_builddir) -I$(top_srcdir)/Iex -I$(top_srcdir)/config
diff --git a/IlmBase/configure.ac b/IlmBase/configure.ac
index e5be361..c24454e 100644
--- a/IlmBase/configure.ac
+++ b/IlmBase/configure.ac
@@ -61,6 +61,7 @@ if test "${multithread}" != no ; then
     [AC_MSG_ERROR([POSIX thread support required])])
     AC_MSG_NOTICE([multithread true, LIBS = $LIBS, CC = $CC, CXXFLAGS = $CXXFLAGS])
 fi
+AM_CONDITIONAL(HAVE_PTHREAD, test x"$acx_pthread_ok" = xyes)
 
 dnl
 dnl Checks for header files.
diff --git a/IlmBase/m4/threads.m4 b/IlmBase/m4/threads.m4
index 2213bb8..7c1ca57 100644
--- a/IlmBase/m4/threads.m4
+++ b/IlmBase/m4/threads.m4
@@ -254,11 +254,11 @@ am_posix_sem_ok=no
 if test "${enable_posix_sem:-yes}" != "no"; then
     AC_CHECK_HEADERS([semaphore.h], [
 	AC_SEARCH_LIBS(sem_init, [posix4 pthread], [
-	    AC_MSG_CHECKING([whether to use POSIX unnamed semaphores])
+	    AC_MSG_CHECKING([whether to use POSIX unnamed semaphores (pshared=0)])
 	    AC_RUN_IFELSE([
 		AC_LANG_PROGRAM([#include <semaphore.h>], [
 		    sem_t mysem;
-		    if (sem_init (&mysem, 1, 1) == 0)
+		    if (sem_init (&mysem, 0, 1) == 0)
 		    {
 			if (sem_wait (&mysem) == 0)
 			{
